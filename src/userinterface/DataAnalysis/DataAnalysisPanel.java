/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DataAnalysis;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.NGOPersonDirectory.NGOPerson;
import Business.Network.Network;
import Business.OldAgePersonDirectory.OLDAgeHomePerson;
import Business.Organization.CompanyOrg;
import Business.Organization.NGOOrg;
import Business.Organization.OldAgeHomeOrg;
import Business.Organization.Organization;
import Business.Organization.VeteransOrg;
import Business.Role.SupervisorRole;
import Business.UserAccount.UserAccount;
import Business.VeteransPersonDirectory.VeteranPerson;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.ui.RefineryUtilities;

/**
 *
 * @author Tushar
 */
public class DataAnalysisPanel extends javax.swing.JPanel {

    /**
     * Creates new form DataAnalysisPanel
     */
    JPanel userProcessContainer;
    EcoSystem business;

    public DataAnalysisPanel(JPanel userProcessContainer, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNGOAnalysis = new javax.swing.JButton();
        btnOldAnalysis = new javax.swing.JButton();
        btnVetransAnalysis = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(255, 255, 255));

        btnNGOAnalysis.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNGOAnalysis.setText("Data Analysis for the employment rate of NGOPerson");
        btnNGOAnalysis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNGOAnalysisActionPerformed(evt);
            }
        });

        btnOldAnalysis.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnOldAnalysis.setText("Data Analysis for the employment rate of Old Age Home Person");
        btnOldAnalysis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOldAnalysisActionPerformed(evt);
            }
        });

        btnVetransAnalysis.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnVetransAnalysis.setText("Data Analysis for the employment rate of Veterans Person");
        btnVetransAnalysis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVetransAnalysisActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Data Analysis For UnderPrivileged");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVetransAnalysis, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOldAnalysis, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnNGOAnalysis, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(51, 51, 51)))
                .addContainerGap(343, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1)
                .addGap(59, 59, 59)
                .addComponent(btnNGOAnalysis, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(btnOldAnalysis, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(btnVetransAnalysis, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(153, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOldAnalysisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOldAnalysisActionPerformed
        float hired = 0;
        float unhired = 0;
        float unemployed = 0;
        float total = 0;

        for (Network network : business.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (org instanceof OldAgeHomeOrg) {
                        for (OLDAgeHomePerson oLDAgeHomePerson : ((OldAgeHomeOrg) org).getOldAgeHomePersonDirectory().getOldAgeHomePersonList()) {
                            if (oLDAgeHomePerson.getHired().equals("hired")) {
                                hired++;
                            } else if (oLDAgeHomePerson.getHired().equals("unhired")) {
                                unhired++;
                            } else {
                                unemployed++;
                            }
                        }
                    }
                }
            }
        }
        System.out.println(hired);
        System.out.println(unhired);
        System.out.println(unemployed);
        total = hired + unhired + unemployed;
        
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        pieDataset.setValue("Hired", new Double((hired/total)*100));
        pieDataset.setValue("UnHired", new Double((unhired/(total))*100));
        pieDataset.setValue("Unemployed", new Double( ( 100 - ((hired/total)*100) -  ((unhired/total)*100)  - ((unemployed/total)*100) )          +      ((unemployed/total)*100) )     );

        JFreeChart chart = ChartFactory.createPieChart("Old Age Home Organization Employment chart", pieDataset, true, true, true);
        PiePlot P = (PiePlot) chart.getPlot();        
        ChartFrame frame = new ChartFrame("Old Age Home Organization Employment chart", chart);
        frame.setVisible(true);
        frame.setSize(900, 850);
    }//GEN-LAST:event_btnOldAnalysisActionPerformed

    private void btnNGOAnalysisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNGOAnalysisActionPerformed
        float hired = 0;
        float unhired = 0;
        float unemployed = 0;
        float total = 0;

        for (Network network : business.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (org instanceof NGOOrg) {
                        for (NGOPerson nGOPerson : ((NGOOrg) org).getnGOPersonDirectory().getNgoPersonList()) {
                            if (nGOPerson.getHired().equals("hired")) {
                                hired++;
                            } else if (nGOPerson.getHired().equals("unhired")) {
                                unhired++;
                            } else {
                                unemployed++;
                            }
                        }
                    }
                }
            }
        }
        System.out.println(hired);
        System.out.println(unhired);
        System.out.println(unemployed);
        total = hired + unhired + unemployed;
        
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        pieDataset.setValue("Hired", new Double((hired/total)*100));
        pieDataset.setValue("UnHired", new Double((unhired/(total))*100));
        pieDataset.setValue("Unemployed", new Double( ( 100 - ((hired/total)*100) -  ((unhired/total)*100)  - ((unemployed/total)*100) )          +      ((unemployed/total)*100) )     );

        JFreeChart chart = ChartFactory.createPieChart("NGO Organization Employment chart", pieDataset, true, true, true);
        PiePlot P = (PiePlot) chart.getPlot();        
        ChartFrame frame = new ChartFrame("NGO Organization Employment chart", chart);
        frame.setVisible(true);
        frame.setSize(900, 850);
        
    }//GEN-LAST:event_btnNGOAnalysisActionPerformed

    private void btnVetransAnalysisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVetransAnalysisActionPerformed
        float hired = 0;
        float unhired = 0;
        float unemployed = 0;
        float total = 0;

        for (Network network : business.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (org instanceof VeteransOrg) {
                        for (VeteranPerson veteranPerson : ((VeteransOrg) org).getVeteransPersonDirectory().getVeteranPersonList()) {
                            if (veteranPerson.getHired().equals("hired")) {
                                hired++;
                            } else if (veteranPerson.getHired().equals("unhired")) {
                                unhired++;
                            } else {
                                unemployed++;
                            }
                        }
                    }
                }
            }
        }
        System.out.println(hired);
        System.out.println(unhired);
        System.out.println(unemployed);
        total = hired + unhired + unemployed;
        
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        pieDataset.setValue("Hired", new Double((hired/total)*100));
        pieDataset.setValue("UnHired", new Double((unhired/(total))*100));
        pieDataset.setValue("Unemployed", new Double( ( 100 - ((hired/total)*100) -  ((unhired/total)*100)  - ((unemployed/total)*100) )          +      ((unemployed/total)*100) )     );

        JFreeChart chart = ChartFactory.createPieChart("Veterans Organization Employment chart", pieDataset, true, true, true);
        PiePlot P = (PiePlot) chart.getPlot();        
        ChartFrame frame = new ChartFrame("Veterans Organization Employment chart", chart);
        frame.setVisible(true);
        frame.setSize(900, 850);
        
    }//GEN-LAST:event_btnVetransAnalysisActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNGOAnalysis;
    private javax.swing.JButton btnOldAnalysis;
    private javax.swing.JButton btnVetransAnalysis;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
